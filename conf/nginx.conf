##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
#server {
#	listen 80 default_server;
#	listen [::]:80 default_server;
#
#	# SSL configuration
#	#
#	# listen 443 ssl default_server;
#	# listen [::]:443 ssl default_server;
#	#
#	# Note: You should disable gzip for SSL traffic.
#	# See: https://bugs.debian.org/773332
#	#
#	# Read up on ssl_ciphers to ensure a secure configuration.
#	# See: https://bugs.debian.org/765782
#	#
#	# Self signed certs generated by the ssl-cert package
#	# Don't use them in a production server!
#	#
#	# include snippets/snakeoil.conf;
#
#	root /var/www/html;
#
#	# Add index.php to the list if you are using PHP
#	index index.html index.htm index.nginx-debian.html;
#
#	server_name _;
#
#	location / {
#		# First attempt to serve request as file, then
#		# as directory, then fall back to displaying a 404.
#		try_files $uri $uri/ =404;
#	}
#
#	# pass PHP scripts to FastCGI server
#	#
#	#location ~ \.php$ {
#	#	include snippets/fastcgi-php.conf;
#	#
#	#	# With php-fpm (or other unix sockets):
#	#	fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
#	#	# With php-cgi (or other tcp sockets):
#	#	fastcgi_pass 127.0.0.1:9000;
#	#}
#
#	# deny access to .htaccess files, if Apache's document root
#	# concurs with nginx's one
#	#
#	#location ~ /\.ht {
#	#	deny all;
#	#}
#}


###############################################################################################
# forced 80 jump to 443
#
server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

	# ftp domain
	if ($host = 'ftp.hehaorong.vip'){
		return 302 ftp://$host$request_uri;#	}
	}

	# forced jump to https
	if ($host = 'hehaorong.vip'){ 
		return 302 https://www.$host$request_uri;
	}

	# forced jump to hehaorong.vip domain
        return 302 https://$host$request_uri;
}

###############################################################################################
# forced https://ftp.hehaorong.vip redirect to ftp.hehaorong.vip
#
server{
	listen 443;
	listen [::]443;
	server_name ftp.hehaorong.vip;

	ssl on;
	ssl_certificate /etc/ssl/certs/hehaorong.vip_certs.pem;
	ssl_certificate_key /etc/ssl/private/hehaorong.vip_key.pem;

	return 302 ftp://ftp.hehaorong.vip;
}


###############################################################################################
# video server
#
server{
        listen 443;
        listen [::]:443;
        server_name video.hehaorong.vip;

	ssl on;
	ssl_certificate /etc/ssl/certs/hehaorong.vip_certs.pem;
	ssl_certificate_key /etc/ssl/private/hehaorong.vip_key.pem;

	root /media/ntfs/video/temp;

	location /{
		try_files $uri $uri/ =404;
	}
}

###############################################################################################
# gateone server
#
server {
        listen 443;
        listen [::]:443;
        server_name lab.hehaorong.vip;

	ssl on;
	ssl_certificate /etc/ssl/certs/hehaorong.vip_certs.pem;
	ssl_certificate_key /etc/ssl/private/hehaorong.vip_key.pem;

	location /{
            # printf "account:$(openssl passwd -crypt password)\n" > file_path
            # printf "embed:$(openssl passwd -crypt embed)\n" > /etc/nginx/.htpasswd_gateone
            auth_basic "Private Property";
            auth_basic_user_file /etc/nginx/.htpasswd_gateone;

	    #与GateOne中的port要一致
	    proxy_pass http://127.0.0.1:8888;

	    proxy_redirect off;
	    proxy_pass_header Server;
	    proxy_set_header Host $http_host;
	    proxy_set_header X-Real-IP $http_address;
	    proxy_set_header X-Scheme $scheme;

	    proxy_http_version 1.1;
	    proxy_set_header Upgrade $http_upgrade;
	    proxy_set_header Connection "upgrade";		
	}

}

#############################################################################################
# blog web server(https) 
upstream php {
        server unix:/run/php/php7.0-fpm.sock;
        server 127.0.0.1:9000;
}
server {
	listen 443;
	listen [::]:443;

	server_name blog.hehaorong.vip;

	ssl on;
	ssl_certificate /etc/ssl/certs/hehaorong.vip_certs.pem;
	ssl_certificate_key /etc/ssl/private/hehaorong.vip_key.pem;

	root /var/www/wordpress;
	index index.html index.php;

        location = /favicon.ico {
                log_not_found off;
                access_log off;
        }

        location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
        }

        location / {
                # This is cool because no php is touched for static content.
                # include the "?$args" part so non-default permalinks doesn't break when using query string
                try_files $uri $uri/ /index.php?$args;
        }

        location ~ \.php$ {
                #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
                include fastcgi.conf;
                fastcgi_intercept_errors on;
                fastcgi_pass php;
                fastcgi_buffers 16 16k;
                fastcgi_buffer_size 32k;
        }

        location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
                expires max;
                log_not_found off;
        }
}

#############################################################################################
# www web server(https) 
server {
	listen 443 default_server;
	listen [::]:443 default_server;

	server_name www.hehaorong.vip;

	ssl on;
	ssl_certificate /etc/ssl/certs/hehaorong.vip_certs.pem;
	ssl_certificate_key /etc/ssl/private/hehaorong.vip_key.pem;

	root /var/www/html;
	#root /var/www/html/wordpress;
	index index.html index.php;

	location / {
		#try_files $uri $uri/ /index.php?$args;
		try_files $uri $uri/ =404;
	}
	
	#location ~ \.php$ {
        #        #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
        #        include fastcgi.conf;
        #        fastcgi_intercept_errors on; 
        #        fastcgi_pass unix:/var/run/php5-fpm.sock;
        #}   

        #location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        #        expires max;
        #        log_not_found off;
        #}   
}

#############################################################################################
# gogs server (https) 
server {
	listen 443;
	listen [::]:443;

	server_name git.hehaorong.vip;

	ssl on;
	ssl_certificate /etc/ssl/certs/hehaorong.vip_certs.pem;
	ssl_certificate_key /etc/ssl/private/hehaorong.vip_key.pem;

	location / {
		proxy_pass http://127.0.0.1:3000/;
		proxy_redirect default;
	}
}

#############################################################################################
# owncloud server (https) 
upstream php-handler{
	server 127.0.0.1:9000;
	# Depending on your used PHP version
	#server unix:/var/run/php5-fpm.sock;
	server unix:/var/run/php/php7.0-fpm.sock;
}

server {
	listen 443 ssl http2;
	#listen [::]:443 ssl http2;
	server_name yun.hehaorong.vip;

	ssl_certificate /etc/ssl/certs/hehaorong.vip_certs.pem;
	ssl_certificate_key /etc/ssl/private/hehaorong.vip_key.pem;

	# Example SSL/TLS configuration. Please read into the manual of NGINX before applying these.
	ssl_session_timeout 5m;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	#ssl_ciphers "EECDH+AES128:HIGH!aNULL:!MD5";
	
	# openssl dhparam -out dhparam.pem 2048
	ssl_dhparam /etc/nginx/sites-enabled/dhparam.pem;
	ssl_prefer_server_ciphers on;
	keepalive_timeout    70;
	ssl_stapling on;
	ssl_stapling_verify on;

	# Add headers to serve security related headers
	# Before enabling Strict-Transport-Security headers please read into this topic first.
	#add_header Strict-Transport-Security "max-age=15552000; includeSubDomains";
	add_header X-Content-Type-Options nosniff;
	add_header X-Frame-Options "SAMEORIGIN";
	add_header X-XSS-Protection "1; mode=block";
	add_header X-Robots-Tag none;
	add_header X-Download-Options noopen;
	add_header X-Permitted-Cross-Domain-Policies none;

	# Path to the root of your installation
	root /var/www/owncloud/;

	location = /robots.txt {
		allow all;
		log_not_found off;
		access_log off;
	}

	# The following 2 rules are only needed for the user_webfinger app.
	# Uncomment it if you're planning to use this app.
	#rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
	#rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json last;

	location = /.well-known/carddav {
		return 301 $scheme://$host/remote.php/dav;
	}
	location = /.well-known/caldav {
		return 301 $scheme://$host/remote.php/dav;
	}

	# set max upload size
	client_max_body_size 512M;
	fastcgi_buffers 8 4K;                     # Please see note 1
	fastcgi_ignore_headers X-Accel-Buffering; # Please see note 2

	# Disable gzip to avoid the removal of the ETag header 
	# Enabling gzip would also make your server vulnerable to BREACH
	# if no additional measures are done. See https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=773332
	gzip off;

	# Uncomment if your server is build with the ngx_pagespeed module
	# This module is currently not supported.
	#pagespeed off;

	error_page 403 /core/templates/403.php;
	error_page 404 /core/templates/404.php;

	location / {
		rewrite ^ /index.php$uri;
	}

	location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
		return 404;
	}
	location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console) {
		return 404;
	}

	location ~ ^/(?:index|remote|public|cron|core/ajax/update|status|ocs/v[12]|updater/.+|ocs-provider/.+|core/templates/40[34])\.php(?:$|/) {
		fastcgi_split_path_info ^(.+\.php)(/.*)$;
		include fastcgi_params;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param SCRIPT_NAME $fastcgi_script_name; # necessary for owncloud to detect the contextroot https://github.com/owncloud/core/blob/v10.0.0/lib/private/AppFramework/Http/Request.php#L603
		fastcgi_param PATH_INFO $fastcgi_path_info;
		fastcgi_param HTTPS on;
		fastcgi_param modHeadersAvailable true; #Avoid sending the security headers twice
		fastcgi_param front_controller_active true;
		fastcgi_read_timeout 180; # increase default timeout e.g. for long running carddav/ caldav syncs with 1000+ entries
		fastcgi_pass php-handler;
		fastcgi_intercept_errors on;
		fastcgi_request_buffering off; #Available since NGINX 1.7.11
	}

	location ~ ^/(?:updater|ocs-provider)(?:$|/) {
		try_files $uri $uri/ =404;
		index index.php;
	}

	# Adding the cache control header for js and css files
	# Make sure it is BELOW the PHP block
	location ~ \.(?:css|js)$ {
		try_files $uri /index.php$uri$is_args$args;
		add_header Cache-Control "max-age=15778463";
		# Add headers to serve security related headers (It is intended to have those duplicated to the ones above)
		# Before enabling Strict-Transport-Security headers please read into this topic first.
		#add_header Strict-Transport-Security "max-age=15552000; includeSubDomains";
		add_header X-Content-Type-Options nosniff;
		add_header X-Frame-Options "SAMEORIGIN";
		add_header X-XSS-Protection "1; mode=block";
		add_header X-Robots-Tag none;
		add_header X-Download-Options noopen;
		add_header X-Permitted-Cross-Domain-Policies none;
		# Optional: Don't log access to assets
		access_log off;
	}

	location ~ \.(?:svg|gif|png|html|ttf|woff|ico|jpg|jpeg|map)$ {
		add_header Cache-Control "public, max-age=7200";
		try_files $uri /index.php$uri$is_args$args;
		# Optional: Don't log access to other assets
		access_log off;
	}
}


###############################################################################
# https://debug.hehaorong.vip
# debug test server
server {
	listen 443 ssl http2;
	#listen [::]:443 ssl http2;
	server_name debug.hehaorong.vip;

	ssl_certificate /etc/ssl/certs/hehaorong.vip_certs.pem;
	ssl_certificate_key /etc/ssl/private/hehaorong.vip_key.pem;

	root /workspace/ftp/workspace/frontend;
	index index.html;

	location / {
		# 后缀没有.html则默认添加
		if (!-e $request_filename){
			rewrite ^(.*)$ /$1.html last;
			break;
		}
		try_files $uri $uri/ =404;
	}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
